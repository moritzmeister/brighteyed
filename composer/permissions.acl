/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample access control list.
 */

rule R3_PersonsSeeOwnHistoryOnly {
  description: "Persons should be able to see the history of their own transactions only"
  participant(t): "org.example.mynetwork.Person"
  operation: READ
  resource(v): "org.hyperledger.composer.system.HistorianRecord"
  condition: (v.participantInvoking.getIdentifier() != t.getIdentifier())
  action: DENY
}

rule R2b_EnableRemoveDoctor {
    description: "Enable Patient to add Doctor"
    participant: "org.example.mynetwork.Patient"
    operation: ALL
    resource: "org.example.mynetwork.RemoveDoctor"
    action: ALLOW
}

rule R2a_EnableAddDoctor {
    description: "Enable Patient to remove Doctor"
    participant: "org.example.mynetwork.Patient"
    operation: ALL
    resource: "org.example.mynetwork.AddDoctor"
    action: ALLOW
}

/*
rule R1c_DoctorSeeTheirRecords {
  description: "Doctor can see/work with their Records"
  participant(t): "org.example.mynetwork.Doctor"
  operation: ALL
  resource(c): "org.example.mynetwork.Record"
  condition: (t.getIdentifier() = c.doctor.getIdentifier())
  action: ALLOW
}
*/

rule R1b_PatientSeeTheirRecords {
  description: "Patient can see/work with their own Records"
  participant(t): "org.example.mynetwork.Patient"
  operation: ALL
  resource(c): "org.example.mynetwork.Record"
  condition: (c.owner.getIdentifier() == t.getIdentifier())
  action: ALLOW
}

rule R1a_PersonSeeUpdateThemselvesOnly {
  description: "Person can see and update their own identity only"
  participant(t): "org.example.mynetwork.Person"
  operation: READ, UPDATE
  resource(v): "org.example.mynetwork.Person"
  condition: (v.getIdentifier() == t.getIdentifier())
  action: ALLOW
}

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

